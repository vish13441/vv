import React, { useState } from "react";

const EmiCalculator = () => {
  const [loanAmount, setLoanAmount] = useState("");
  const [interestRate, setInterestRate] = useState("");
  const [loanTenure, setLoanTenure] = useState("");
  const [emi, setEmi] = useState("");
  const [selectedCarModel, setSelectedCarModel] = useState("");

  const carModels = [
    { name: "Renault Kwid", price: 300000 },
    { name: "Renault Triber", price: 600000 },
    { name: "Nissan Magnite", price: 700000 },
    { name: "Nissan Kicks", price: 900000 },
  ];

  const calculateEmi = () => {
    const principal = parseFloat(loanAmount) || 0;
    const rate = parseFloat(interestRate) / 1200 || 0;
    const time = parseFloat(loanTenure) || 0;
    const emi = (
      principal * rate * (Math.pow(1 + rate, time) / (Math.pow(1 + rate, time) - 1))
    ).toFixed(2);
    setEmi(emi);
  };

  const handleCarModelChange = (e) => {
    setSelectedCarModel(e.target.value);
    setLoanAmount("");
    setInterestRate("");
    setLoanTenure("");
    setEmi("");
  };

  const selectedCar = carModels.find((car) => car.name === selectedCarModel);

  return (
    <div>
      <h2>Renault Nissan EMI Calculator</h2>
      <label htmlFor="carModel">Select a car model:</label>
      <select id="carModel" onChange={handleCarModelChange}>
        <option value="">Select a car model</option>
        {carModels.map((car) => (
          <option key={car.name} value={car.name}>
            {car.name}
          </option>
        ))}
      </select>

      {selectedCar && (
        <form>
          <label htmlFor="loanAmount">Loan Amount (Rs.):</label>
          <input
            type="number"
            id="loanAmount"
            value={loanAmount}
            onChange={(e) => setLoanAmount(e.target.value)}
          />

          <label htmlFor="interestRate">Interest Rate (%):</label>
          <input
            type="number"
            id="interestRate"
            value={interestRate}
            onChange={(e) => setInterestRate(e.target.value)}
          />

          <label htmlFor="loanTenure">Loan Tenure (months):</label>
          <input
            type="number"
            id="loanTenure"
            value={loanTenure}
            onChange={(e) => setLoanTenure(e.target.value)}
          />

          <button type="button" onClick={calculateEmi}>
            Calculate EMI
          </button>
        </form>
      )}

      {emi && (
        <div>
          <h3>EMI: Rs. {emi}</h3>
          <h4>Total Price: Rs. {selectedCar.price}</h4>
        </div>
      )}
    </div>
  );
};

export default EmiCalculator;
